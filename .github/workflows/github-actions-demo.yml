name: Build Frontend & Backend
run-name: Build triggered by ${{ github.actor }}

# on: [push]
on:
  push:
    paths:
      - 'frontend/**'
      - 'backend/**'

jobs:
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-node@v4
        with:
          node-version: 16
          cache: 'npm' # —É—Å–∫–æ—Ä—è–µ—Ç npm install
          cache-dependency-path: frontend/package-lock.json
      - run: npm ci # –±—ã—Å—Ç—Ä–µ–µ –∏ –Ω–∞–¥—ë–∂–Ω–µ–µ, —á–µ–º npm install
      - run: npm run build

      - uses: actions/upload-artifact@v4
        id: upload
        with:
          name: frontend-dist 
          path: frontend/dist 
         
      - name: Notify Telegram (Frontend)
        if: always() # –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –¥–∞–∂–µ –µ—Å–ª–∏ —Å–±–æ—Ä–∫–∞ —É–ø–∞–ª–∞
        run: |
          echo '${{ toJSON(github) }}'
          STATUS=${{ job.status }}
          MESSAGE="üì¶ *Frontend build* finished with status: *${STATUS}*\nRepo: ${{ github.repository }}\nCommit: ${{ github.sha }}\nBy: ${{ steps }}"
           curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d parse_mode=Markdown \
            -d text="$MESSAGE ${{ steps.upload.outputs.artifact-url }}"

  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
          cache: maven #  –∫–µ—à–∏—Ä—É–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Maven

      - run: mvn -B clean package # -B = batch mode, –º–µ–Ω—å—à–µ –ª–æ–≥–æ–≤

      - uses: actions/upload-artifact@v4
        id: upload
        with:
         name: backend-jar
         path: backend/target/*.jar
      
      - name: Notify Telegram (Backend)
        if: always() # –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –¥–∞–∂–µ –µ—Å–ª–∏ —Å–±–æ—Ä–∫–∞ —É–ø–∞–ª–∞
        run: |
          STATUS=${{ job.status }}
          MESSAGE="üì¶ *Backend build* finished with status: *${STATUS}*\nRepo: ${{ github.repository }}\nCommit: ${{ github.sha }}\nBy: ${{ steps }}"
           curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d parse_mode=Markdown \
            -d text="$MESSAGE ${{ steps.upload.outputs.artifact-url }}"
